<?php

module_load_include('inc', 'an_taxonomy', 'includes/resource.globals');
module_load_include('inc', 'an_taxonomy', 'includes/communities.globals');

function an_taxonomy_enable() {
	// grab the vocabulary difinitions and existing vocabularies
	global $an_vocabularies, $an_communities_field_topic_options;
	$existing_names = taxonomy_vocabulary_get_names();
        
        $an_communities = array(
            'name' => 'Topic',
            'machine_stem' => 'topic',
            'terms' => array_values($an_communities_field_topic_options),
        );
        
        $vocabularies = $an_vocabularies;
        $vocabularies[] = $an_communities;
        
	// for each definition...
	foreach ($vocabularies as $weight => $details) {
		// get the name and machine name
		$name = $details['name'];
		$machine_name = 'an_vocabulary_' . $details['machine_stem'];

		// clear any existing matching vocabulary
		if (isset($existing_names[$machine_name]))
			taxonomy_vocabulary_delete($existing_names[$machine_name]->vid);

		// build the vocabulary and save it
		$vocab = an_taxonomy_build_vocabulary($name,
						$machine_name, $weight + 1);
		if (!taxonomy_vocabulary_save($vocab)) {
			drupal_set_message('Failed to add vocabulary ' . $_name,
					'warning');
		} else {
			// build and save the terminologies as well
			foreach ($details['terms'] as $term_weight => $term_name) {
				$term = an_taxonomy_build_term($term_name, $vocab, $term_weight);
				if (!taxonomy_term_save($term)) {
					drupal_set_message('Failed to add term ' . $term_name . 
							' to vocabulary ' . $name . '.', 'warning');
				}
			}
		}
	}
}

function an_taxonomy_disable() {
	// get the definitions and existing vocabularies
	global $an_vocabularies;
	$names = taxonomy_vocabulary_get_names();

	// remove each matching existing vocabulary
	foreach ($an_vocabularies as $details) {
		$machine_name = 'an_vocabulary_' . $details['machine_stem'];
		if (isset($names[$machine_name])) {
			$return = taxonomy_vocabulary_delete($names[$machine_name]->vid);
			if (!$return) {
				drupal_set_message('Failed to remove vocabulary ' .
						$machine_name, 'warning');
			}
		}
	}
}

function an_taxonomy_build_vocabulary($name, $machine_name, $weight) {
	$t = get_t();
	$vocabulary = new stdClass();
	$vocabulary->name = $t($name);
	$vocabulary->module = 'an_taxonomies';
	$vocabulary->machine_name = $machine_name;
	$vocabulary->hierarchy = 1;
	$vocabulary->weight = $weight;
	return $vocabulary;
}

function an_taxonomy_build_term($name, $vocabulary, $weight) {
	$t = get_t();
	$term = new stdClass();
	$term->name = $t($name);
	$term->vocabulary_machine_name = 'an_taxonomies';
	$term->vid = $vocabulary->vid;
	$term->weight = $weight;

	return $term;
}

?>
