<?php

/* * ***
 * Created By: Lauren
 * Created On: June 29, 2012
 * 
 * Last Updated By: Lauren
 * Last Updated On: June 29, 2012
 * *** */

/*
 * LOAD OUTSIDE CODE
 */
module_load_include('inc', 'resource', 'types');

/**
 * hook_enable()
 * 
 * Enables the core permissions for communities and conversations.
 */
function permissions_core_resources_enable() {
    global $an_resource_types;
    $anon = 0;
    $auth = 1;
    $writer = 2;
    $anstaff = 3;
    $admin = 4;
    
    $node = 'node';

    $default_perms = array(
        $node => array(),
    );

    foreach ($an_resource_types as $rtype => $properties) {
        $default_perms[$node]['create '.$rtype. ' content'] = array(
            $anon => FALSE,
            $auth => FALSE,
            $writer => TRUE,
            $anstaff => TRUE,
            $admin => TRUE
        );
        $default_perms[$node]['edit own ' . $rtype . ' content'] = array(
            $anon => FALSE,
            $auth => FALSE,
            $writer => TRUE,
            $anstaff => TRUE,
            $admin => TRUE
        );
        $default_perms[$node]['edit any ' . $rtype . ' content'] = array(
            $anon => FALSE,
            $auth => FALSE,
            $writer => FALSE,
            $anstaff => TRUE,
            $admin => TRUE
        );
        $default_perms[$node]['delete own ' . $rtype . ' content'] = array(
            $anon => FALSE,
            $auth => FALSE,
            $writer => FALSE,
            $anstaff => FALSE,
            $admin => FALSE
        );
        $default_perms[$node]['delete any ' . $rtype . ' content'] = array(
            $anon => FALSE,
            $auth => FALSE,
            $writer => FALSE,
            $anstaff => FALSE,
            $admin => FALSE
        );
    }
    print dpm($default_perms);

    $anon_perms = array();
    $auth_perms = array();
    $writer_perms = array();
    $anstaff_perms = array();
    $admin_perms = array();

    foreach ($default_perms as $category) {
        foreach ($category as $perm => $role) {
            $anon_perms[$perm] = $role[$anon];
            $auth_perms[$perm] = $role[$auth];
            $writer_perms[$perm] = $role[$writer];
            $anstaff_perms[$perm] = $role[$anstaff];
            $admin_perms[$perm] = $role[$admin];
        }
    }


    _permissions_core_resources_update_perms('Anonymous User', $anon_perms);
    _permissions_core_resources_update_perms('Authenticated User', $auth_perms);
    _permissions_core_resources_update_perms('Writer', $writer_perms);
    _permissions_core_resources_update_perms('AccrualNet Staff', $anstaff_perms);
    _permissions_core_resources_update_perms('administrator', $admin_perms);
}

function _permissions_core_resources_update_perms($role_name, $role_permissions) {
	$role = user_role_load_by_name($role_name);
	//Make sure the role exists. user_role_load_by_name
	//will return false if it doesnt exist.
	if ($role) {
		$role_rid = $role->rid;
		user_role_change_permissions($role_rid, $role_permissions);
	} else {
		watchdog('permissions_core_resources', 'The role %role_name does not exist',
				array('%role_name' => $role_name), WATCHDOG_ERROR);
	}
}

function _permissions_core_resources_disable() {
    
}

